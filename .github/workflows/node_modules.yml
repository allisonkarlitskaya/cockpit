name: node_modules
on:
  pull_request_target

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      GIT_DIR: git-dir.git
      pull_request: ${{ github.event.pull_request.head.sha }}
    outputs:
      package_json: ${{ steps.get_package_json.outputs.package_json }}

    steps:
      - name: Debug
        run: true '${{ toJSON(github) }}'

      - name: Set up work area
        run: |
            set -ux

            git init -b main

            git config user.name "GitHub Workflow"
            git config user.email "cockpituous@cockpit-project.org"

            git remote add origin "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
            git remote add cache "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY%/*}/node-cache"

      - name: Fetch pull request
        run: git fetch origin "${pull_request}"

      - name: Compare package.json to base branch
        run: git diff --src-prefix=base/ --dst-prefix=pr/ '${{ github.sha }}' '${{ github.event.pull_request.head.sha }}' -- package.json | tee package.json-diff

      - name: Extract package.json
        id: package_json_extract
        run: git cat-file blob "FETCH_HEAD:package.json" > package.json

      - name: Resolve and fetch node_modules gitlink
        run: |
            set -ux
            pull_request_node_modules="$(git rev-parse "${pull_request}:node_modules")"
            test -n "${pull_request_node_modules}"
            git fetch cache "${pull_request_node_modules}"

      - name: Check package.json vs. node_modules/.package.json consistency
        run: |
          git cat-file blob "FETCH_HEAD:.package.json" > node_modules-package.json
          diff -u node_modules-package.json package.json

      - name: Rebuild node_modules
        id: npm_install
        if: ${{ failure() && steps.package_json_extract.outcome == 'success' }}
        run: |
          set -ux

          echo 123abc > sha
          exit 0

          exec >&2 # don't interpret workflow commands

          git cat-file blob "${pull_request}:package.json" > package.json

          # run npm
          container="$(docker create -u node -w /home/node node:14 npm install --ignore-scripts)"
          docker cp package.json "${container}:/home/node/package.json"
          docker start -a "${container}" 2>&1 | tee npm-install-log
          docker cp "${container}:/home/node" - | tar --get node/package.json node/node_modules node/package-lock.json
          docker rm -f "${container}"

          # double check that we got what we started with
          diff -u package.json node/package.json

          # no tricky stuff plz
          find node -name '.git*' -not -name '.github' -delete

          # add the metadata files
          mv node/package.json      node/node_modules/.package.json
          mv node/package-lock.json node/node_modules/.package-lock.json

          # produce the git commit
          git --work-tree=node/node_modules add --all
          git --work-tree=node/node_modules commit -q -F - < npm-install-log
          sha="sha-$(git rev-parse HEAD)"
          tag="sha-${sha}"
          git tag "${tag}"
          rm -rf node_modules

          # push the git commit
          git config --global credential.helper store
          echo 'https://token:${{ secrets.COCKPITUOUS_TOKEN }}@github.com' >> ~/.git-credentials
          git push cache "${tag}"

          # write the sha to disk
          echo "${sha}" > sha

      - name: Comment on PR
        if: ${{ failure() && steps.npm_install.outcome == 'success' }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const sha = fs.readFileSync('sha', 'utf8');
            const package_json = fs.readFileSync('package.json', 'utf8');
            const body = "Successfully built \n```\n" + package_json + "\n```\nwith sha `" + sha + "`";
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
