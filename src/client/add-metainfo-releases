#!/usr/bin/python3

import argparse
import json
import os
import time
import xml.etree.ElementTree as ET


# Pretend like this is a little bit functional
def element(tag, text=None, children=(), **kwargs):
    tag = ET.Element(tag, kwargs)
    tag.text = text
    tag.extend(children)
    return tag


def format_release(release):
    version = release['version']
    date = time.strftime('%Y-%m-%d', time.gmtime(release['timestamp']))
    return element('release', version=version, date=date, children=[
        element('url', f'https://cockpit-project.org/blog/cockpit-{version}.html', type='details'),
        element('description', children=[
            element('p', 'Summary of changes:'),
            element('ul', children=[element('li', point) for point in release['points']])
        ])
    ])


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--version', help='Current version number', default='')
    parser.add_argument('template', help='Path to xml.in file in tree')
    parser.add_argument('release_info', help='Path to .release-info')
    parser.add_argument('output', help='Path to output xml file')
    args = parser.parse_args()

    with open(args.release_info, encoding='utf-8') as file:
        release_info = json.load(file)

    tree = ET.parse(args.template)
    releases = tree.find('releases')
    releases.extend([format_release(release) for release in release_info['releases']])
    if 'ELEMENT_TREE_NO_INDENT' not in os.environ:
        ET.indent(releases, space="  ", level=1)
    tree.write(args.output, encoding='utf-8', xml_declaration=True)


if __name__ == '__main__':
    main()
